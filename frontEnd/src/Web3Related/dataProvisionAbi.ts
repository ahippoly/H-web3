export const provisionAbi = [{ inputs: [], stateMutability: 'payable', type: 'constructor' }, { inputs: [{ internalType: 'address', name: 'owner', type: 'address' }], name: 'OwnableInvalidOwner', type: 'error' }, { inputs: [{ internalType: 'address', name: 'account', type: 'address' }], name: 'OwnableUnauthorizedAccount', type: 'error' }, { anonymous: false, inputs: [{ indexed: false, internalType: 'uint256', name: '_tokenID', type: 'uint256' }], name: 'OwnershipNFTMinted', type: 'event' }, { anonymous: false, inputs: [{ indexed: true, internalType: 'address', name: 'previousOwner', type: 'address' }, { indexed: true, internalType: 'address', name: 'newOwner', type: 'address' }], name: 'OwnershipTransferred', type: 'event' }, { anonymous: false, inputs: [{ indexed: false, internalType: 'string', name: 'assetId', type: 'string' }, { indexed: false, internalType: 'uint256', name: 'newPrice', type: 'uint256' }], name: 'PriceUpdated', type: 'event' }, { inputs: [{ internalType: 'string', name: 'id', type: 'string' }], name: '_getDatasetById', outputs: [{ components: [{ internalType: 'string', name: 'id', type: 'string' }, { internalType: 'uint256', name: 'price', type: 'uint256' }, { internalType: 'address', name: 'author', type: 'address' }, { internalType: 'enum datatype', name: 'datatype', type: 'uint8' }, { internalType: 'string', name: 'liscence', type: 'string' }, { components: [{ internalType: 'uint256', name: 'quantity', type: 'uint256' }, { internalType: 'string', name: 'storageUrl', type: 'string' }, { internalType: 'uint256', name: 'size', type: 'uint256' }, { internalType: 'uint256', name: 'date', type: 'uint256' }], internalType: 'struct DatasetMetadata', name: 'metadata', type: 'tuple' }], internalType: 'struct Dataset', name: '', type: 'tuple' }], stateMutability: 'view', type: 'function' }, { inputs: [{ internalType: 'string', name: 'id', type: 'string' }], name: '_getModelById', outputs: [{ components: [{ internalType: 'string', name: 'id', type: 'string' }, { internalType: 'uint256', name: 'price', type: 'uint256' }, { internalType: 'address', name: 'author', type: 'address' }, { internalType: 'string', name: 'liscence', type: 'string' }, { internalType: 'string', name: 'storageUrl', type: 'string' }], internalType: 'struct Model', name: '', type: 'tuple' }], stateMutability: 'view', type: 'function' }, { inputs: [{ internalType: 'address', name: 'addr', type: 'address' }, { internalType: 'string', name: 'assetId', type: 'string' }], name: '_isOwner', outputs: [{ internalType: 'bool', name: '', type: 'bool' }], stateMutability: 'view', type: 'function' }, { inputs: [{ internalType: 'string', name: 'id', type: 'string' }, { internalType: 'uint256', name: 'price', type: 'uint256' }, { internalType: 'string', name: 'dtype', type: 'string' }, { internalType: 'string', name: 'liscence', type: 'string' }, { internalType: 'uint256', name: 'quantity', type: 'uint256' }, { internalType: 'string', name: 'storageUrl', type: 'string' }, { internalType: 'uint256', name: 'size', type: 'uint256' }, { internalType: 'uint256', name: 'date', type: 'uint256' }], name: 'addDataset', outputs: [], stateMutability: 'nonpayable', type: 'function' }, { inputs: [{ internalType: 'string', name: 'id', type: 'string' }, { internalType: 'uint256', name: 'price', type: 'uint256' }, { internalType: 'address', name: 'author', type: 'address' }, { internalType: 'string', name: 'liscence', type: 'string' }, { internalType: 'string', name: 'storageUrl', type: 'string' }], name: 'addModel', outputs: [], stateMutability: 'nonpayable', type: 'function' }, { inputs: [{ internalType: 'address', name: 'provider', type: 'address' }], name: 'addProvider', outputs: [], stateMutability: 'nonpayable', type: 'function' }, { inputs: [], name: 'cr8Cert', outputs: [{ internalType: 'contract CR8Cert', name: '', type: 'address' }], stateMutability: 'view', type: 'function' }, { inputs: [{ internalType: 'address', name: '', type: 'address' }], name: 'datasets', outputs: [{ internalType: 'string', name: 'id', type: 'string' }, { internalType: 'uint256', name: 'price', type: 'uint256' }, { internalType: 'address', name: 'author', type: 'address' }, { internalType: 'enum datatype', name: 'datatype', type: 'uint8' }, { internalType: 'string', name: 'liscence', type: 'string' }, { components: [{ internalType: 'uint256', name: 'quantity', type: 'uint256' }, { internalType: 'string', name: 'storageUrl', type: 'string' }, { internalType: 'uint256', name: 'size', type: 'uint256' }, { internalType: 'uint256', name: 'date', type: 'uint256' }], internalType: 'struct DatasetMetadata', name: 'metadata', type: 'tuple' }], stateMutability: 'view', type: 'function' }, { inputs: [{ internalType: 'string', name: 'id', type: 'string' }], name: 'getDatasetById', outputs: [{ components: [{ internalType: 'string', name: 'id', type: 'string' }, { internalType: 'uint256', name: 'price', type: 'uint256' }, { internalType: 'address', name: 'author', type: 'address' }, { internalType: 'enum datatype', name: 'datatype', type: 'uint8' }, { internalType: 'string', name: 'liscence', type: 'string' }, { components: [{ internalType: 'uint256', name: 'quantity', type: 'uint256' }, { internalType: 'string', name: 'storageUrl', type: 'string' }, { internalType: 'uint256', name: 'size', type: 'uint256' }, { internalType: 'uint256', name: 'date', type: 'uint256' }], internalType: 'struct DatasetMetadata', name: 'metadata', type: 'tuple' }], internalType: 'struct Dataset', name: '', type: 'tuple' }], stateMutability: 'view', type: 'function' }, { inputs: [{ internalType: 'address', name: 'author', type: 'address' }], name: 'getDatasetsPerAuthor', outputs: [{ components: [{ internalType: 'string', name: 'id', type: 'string' }, { internalType: 'uint256', name: 'price', type: 'uint256' }, { internalType: 'address', name: 'author', type: 'address' }, { internalType: 'enum datatype', name: 'datatype', type: 'uint8' }, { internalType: 'string', name: 'liscence', type: 'string' }, { components: [{ internalType: 'uint256', name: 'quantity', type: 'uint256' }, { internalType: 'string', name: 'storageUrl', type: 'string' }, { internalType: 'uint256', name: 'size', type: 'uint256' }, { internalType: 'uint256', name: 'date', type: 'uint256' }], internalType: 'struct DatasetMetadata', name: 'metadata', type: 'tuple' }], internalType: 'struct Dataset', name: '', type: 'tuple' }], stateMutability: 'view', type: 'function' }, { inputs: [{ internalType: 'string', name: 'id', type: 'string' }], name: 'getModelById', outputs: [{ components: [{ internalType: 'string', name: 'id', type: 'string' }, { internalType: 'uint256', name: 'price', type: 'uint256' }, { internalType: 'address', name: 'author', type: 'address' }, { internalType: 'string', name: 'liscence', type: 'string' }, { internalType: 'string', name: 'storageUrl', type: 'string' }], internalType: 'struct Model', name: '', type: 'tuple' }], stateMutability: 'view', type: 'function' }, { inputs: [{ internalType: 'address', name: 'author', type: 'address' }], name: 'getModelsPerAuthor', outputs: [{ components: [{ internalType: 'string', name: 'id', type: 'string' }, { internalType: 'uint256', name: 'price', type: 'uint256' }, { internalType: 'address', name: 'author', type: 'address' }, { internalType: 'string', name: 'liscence', type: 'string' }, { internalType: 'string', name: 'storageUrl', type: 'string' }], internalType: 'struct Model', name: '', type: 'tuple' }], stateMutability: 'view', type: 'function' }, { inputs: [{ internalType: 'address', name: 'author', type: 'address' }], name: 'getTokensPerAuthor', outputs: [{ internalType: 'uint256[]', name: '', type: 'uint256[]' }], stateMutability: 'view', type: 'function' }, { inputs: [{ internalType: 'address', name: 'addr', type: 'address' }], name: 'isProvidor', outputs: [{ internalType: 'bool', name: '', type: 'bool' }], stateMutability: 'view', type: 'function' }, { inputs: [{ internalType: 'address', name: '', type: 'address' }], name: 'models', outputs: [{ internalType: 'string', name: 'id', type: 'string' }, { internalType: 'uint256', name: 'price', type: 'uint256' }, { internalType: 'address', name: 'author', type: 'address' }, { internalType: 'string', name: 'liscence', type: 'string' }, { internalType: 'string', name: 'storageUrl', type: 'string' }], stateMutability: 'view', type: 'function' }, { inputs: [], name: 'owner', outputs: [{ internalType: 'address', name: '', type: 'address' }], stateMutability: 'view', type: 'function' }, { inputs: [{ internalType: 'address', name: '', type: 'address' }], name: 'providersList', outputs: [{ internalType: 'bool', name: '', type: 'bool' }], stateMutability: 'view', type: 'function' }, { inputs: [], name: 'renounceOwnership', outputs: [], stateMutability: 'nonpayable', type: 'function' }, { inputs: [{ internalType: 'address', name: '', type: 'address' }, { internalType: 'uint256', name: '', type: 'uint256' }], name: 'tokens', outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }], stateMutability: 'view', type: 'function' }, { inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }], name: 'transferOwnership', outputs: [], stateMutability: 'nonpayable', type: 'function' }]
